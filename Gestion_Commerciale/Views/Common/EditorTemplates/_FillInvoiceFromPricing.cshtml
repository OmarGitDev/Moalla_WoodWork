@model List<TSD_DAL.Model.PricingDetailsModel>
@{
    string numPiece = (string)ViewBag.numPiece;
    Model.ForEach(e => e.numPiece = numPiece);
}
<form id="ParamForm">

    <div style="overflow-x:auto;max-height:600px">

        @for (int i = 0; i < Model.Count(); i++)
        {
            <div style="margin:1%; width:98%;height:100%" class="form-control border-left-primary">
                
                    <div style="display:inline-flex;width:100%">
                    @Html.HiddenFor(Model => Model[i].numPiece)
                    @Html.HiddenFor(Model => Model[i].ID)
                    @Html.HiddenFor(Model => Model[i].CodeDetail)
                    
 @if (Model[i].ProduitID != 0 && Model[i].ProduitID != null)
 {
                    <div style="display:block;width:73%;margin-right:1%;">
                        @Html.LabelFor(Model => Model[i].Libelle)
                        @Html.TextBoxFor(Model => Model[i].Libelle, new { @class = "form-control border-left-info" })
                    </div>

                        <div style="display:block;width:26%">
                            @Html.LabelFor(Model => Model[i].Quantite)
                            @Html.TextBoxFor(Model => Model[i].Quantite, new { @type = "number", @class = "form-control border-left-info" })
                        </div>
 }
                 else
                 {
                <div style="display:block;width:100%;">
                    @Html.LabelFor(Model => Model[i].Libelle)
                    @Html.TextBoxFor(Model => Model[i].Libelle, new { @class = "form-control border-left-info" })
                </div>
                        @Html.HiddenFor(Model => Model[i].Quantite)
                    }
                    </div>
                    <div style="display:inline-flex;">
                        <div style="display:block;width:36%;margin-right:1%">
                            @Html.Label("Remise")
                            @Html.TextBoxFor(Model => Model[i].Remise, new {  @onkeypress= "return(event.charCode >=48 &&event.charCode  <= 57 ||event.charCode ==46 ||event.charCode ==0)",@onkeyup = "this.value = this.value.replace('.',',')", @class = "form-control border-left-info" })
                        </div>
                        <div style="display:block;width:36%;margin-right:1%">
                            @Html.Label("Taxe")
                            @Html.DropDownListFor(Model => Model[i].pourcentageTaxe, Gestion_Commerciale.Controllers.CommonController.GetAllTaxesList(), new { @type = "number", @class = "form-control border-left-info dropDowList" })
                        </div>
                    
                    <div style="display:block;width:26%">
                        @Html.Label("Prix Vente HT")
                        @Html.TextBoxFor(Model => Model[i].MontantUnitaire, new { @onchange = "UpdateMarge(" + i + ")",  @onkeypress= "return(event.charCode >=48 &&event.charCode  <= 57 ||event.charCode ==46 ||event.charCode ==0)",@onkeyup = "this.value = this.value.replace('.',',')", @format = "0.00", @class = "form-control border-left-info pVente_" + i })
                    </div>
                </div>
               
               
            </div>
        }
    </div>
</form>
<div class="modal-footer">
    <button type="button" class="btn btn-sm btn-success" onclick="LinkPricingDetailsToInvoice()"><i class="ace-icon fa fa-check"></i> Valider</button>
    <button type="button" class="btn btn-sm" id="AnnulerP" data-dismiss="modal"><i class="ace-icon fa fa-times"></i> Annuler</button>
</div>